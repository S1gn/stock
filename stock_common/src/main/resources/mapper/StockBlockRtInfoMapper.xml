<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.s1gn.stock.mapper.StockBlockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.s1gn.stock.pojo.entity.StockBlockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="label" column="label" jdbcType="VARCHAR"/>
            <result property="blockName" column="block_name" jdbcType="VARCHAR"/>
            <result property="companyNum" column="company_num" jdbcType="INTEGER"/>
            <result property="avgPrice" column="avg_price" jdbcType="DECIMAL"/>
            <result property="updownRate" column="updown_rate" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,label,block_name,
        company_num,avg_price,updown_rate,
        trade_amount,trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_block_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="sectorAllLimit" resultType="com.s1gn.stock.pojo.domain.StockBlockDomain">
        select
            sbr.company_num  as companyNum,
            sbr.trade_amount as tradeAmt,
            sbr.label        as code,
            sbr.avg_price    as avgPrice,
            sbr.block_name   as name,
            sbr.cur_time     as curDate,
            sbr.trade_volume as tradeVol,
            sbr.updown_rate  as updownRate
        from stock_block_rt_info as sbr
        where sbr.cur_time=#{curDate}
        order by sbr.trade_volume desc
            limit 10
    </select>
    <select id="getSockInfoByTime" resultType="com.s1gn.stock.pojo.domain.StockUpdownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price- sri.min_price)/sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            sri.cur_time   as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price-sri.pre_close_price) as increase,
            (sri.cur_price- sri.pre_close_price)/sri.pre_close_price as upDown,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.cur_time=#{curDate}
        order by upDown desc
    </select>
    <select id="getStockIncreaseInfo" resultType="com.s1gn.stock.pojo.domain.StockUpdownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price- sri.min_price)/sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            sri.cur_time   as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price-sri.pre_close_price) as increase,
            (sri.cur_price- sri.pre_close_price)/sri.pre_close_price as upDown,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.cur_time=#{curDate}
        order by increase desc
        limit 0, 4
    </select>

    <select id="getStockUpDownCount" resultType="map">
        select
        date_format(tmp.time,'%Y%m%d%H%i') as time ,
        count(*) as count
        from (select
        (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as ud,
        sri.cur_time as time
        from stock_rt_info sri
        where sri.cur_time BETWEEN #{startDate} and #{endDate}
        having ud
        <if test="flag==1">
            >=0.1
        </if>
        <if test="flag==0">
            &lt;=-0.1
        </if>
        )
        as tmp
        group by tmp.time
        order by tmp.time asc
    </select>
    <select id="getIncreaseRangeInfoByDate" resultType="map">
        select
            tmp2.title,
            count(*) as count
        from
            (select
            CASE
            WHEN tmp.rate > 0.07 THEN  '>7%'
            WHEN tmp.rate > 0.05 AND tmp.rate &lt;= 0.07 THEN '5~7%'
            WHEN tmp.rate > 0.03 AND tmp.rate &lt;= 0.05 THEN '3~5%'
            WHEN tmp.rate > 0 AND tmp.rate &lt;= 0.03 THEN '0~3%'
            WHEN tmp.rate > -0.03 AND tmp.rate &lt;= 0 THEN '-3~0%'
            WHEN tmp.rate > -0.05 AND tmp.rate &lt;= -0.03 THEN '-5~-3%'
            WHEN tmp.rate > -0.07 AND tmp.rate &lt;= -0.05 THEN '-7~-5%'
            ELSE '&lt;-7%'
            END 'title'
            from
            (select
            (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as rate
            from stock_rt_info as sri
            where sri.cur_time=#{curDate})
            as tmp)
            as tmp2
        group by tmp2.title
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_block_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.s1gn.stock.pojo.entity.StockBlockRtInfo" useGeneratedKeys="true">
        insert into stock_block_rt_info
        ( id,label,block_name
        ,company_num,avg_price,updown_rate
        ,trade_amount,trade_volume,cur_time
        )
        values (#{id,jdbcType=BIGINT},#{label,jdbcType=VARCHAR},#{blockName,jdbcType=VARCHAR}
        ,#{companyNum,jdbcType=INTEGER},#{avgPrice,jdbcType=DECIMAL},#{updownRate,jdbcType=DECIMAL}
        ,#{tradeAmount,jdbcType=BIGINT},#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.s1gn.stock.pojo.entity.StockBlockRtInfo" useGeneratedKeys="true">
        insert into stock_block_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="label != null">label,</if>
                <if test="blockName != null">block_name,</if>
                <if test="companyNum != null">company_num,</if>
                <if test="avgPrice != null">avg_price,</if>
                <if test="updownRate != null">updown_rate,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="label != null">#{label,jdbcType=VARCHAR},</if>
                <if test="blockName != null">#{blockName,jdbcType=VARCHAR},</if>
                <if test="companyNum != null">#{companyNum,jdbcType=INTEGER},</if>
                <if test="avgPrice != null">#{avgPrice,jdbcType=DECIMAL},</if>
                <if test="updownRate != null">#{updownRate,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into stock_block_rt_info
        ( id,label,block_name
        ,company_num,avg_price,updown_rate
        ,trade_amount,trade_volume,cur_time
        )
        values
            <foreach collection="infoList" item="info" separator=",">
                (#{info.id,jdbcType=BIGINT},#{info.label,jdbcType=VARCHAR},#{info.blockName,jdbcType=VARCHAR}
               ,#{info.companyNum,jdbcType=INTEGER},#{info.avgPrice,jdbcType=DECIMAL},#{info.updownRate,jdbcType=DECIMAL}
               ,#{info.tradeAmount,jdbcType=BIGINT},#{info.tradeVolume,jdbcType=DECIMAL},#{info.curTime,jdbcType=TIMESTAMP}
               )
            </foreach>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.s1gn.stock.pojo.entity.StockBlockRtInfo">
        update stock_block_rt_info
        <set>
                <if test="label != null">
                    label = #{label,jdbcType=VARCHAR},
                </if>
                <if test="blockName != null">
                    block_name = #{blockName,jdbcType=VARCHAR},
                </if>
                <if test="companyNum != null">
                    company_num = #{companyNum,jdbcType=INTEGER},
                </if>
                <if test="avgPrice != null">
                    avg_price = #{avgPrice,jdbcType=DECIMAL},
                </if>
                <if test="updownRate != null">
                    updown_rate = #{updownRate,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.s1gn.stock.pojo.entity.StockBlockRtInfo">
        update stock_block_rt_info
        set 
            label =  #{label,jdbcType=VARCHAR},
            block_name =  #{blockName,jdbcType=VARCHAR},
            company_num =  #{companyNum,jdbcType=INTEGER},
            avg_price =  #{avgPrice,jdbcType=DECIMAL},
            updown_rate =  #{updownRate,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
