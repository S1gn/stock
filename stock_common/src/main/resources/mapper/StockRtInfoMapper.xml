<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.s1gn.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.s1gn.stock.pojo.entity.StockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
            <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
            <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
            <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
            <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_name,
        pre_close_price,open_price,cur_price,
        min_price,max_price,trade_amount,
        trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="getStock4MinuteInfo" resultType="com.s1gn.stock.pojo.domain.Stock4MinuteDomain">
        select
            sri.cur_time    as date,
            sri.trade_amount as tradeAmt,
            sri.stock_code as code,
            sri.min_price as lowPrice,
            sri.pre_close_price as preClosePrice,
            sri.stock_name as name,
            sri.max_price as highPrice,
            sri.open_price as openPrice,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.stock_code=#{stockCode}
          and sri.cur_time between #{openDate} and #{endDate}
    </select>
    <select id="getStock4DayInfo" resultType="com.s1gn.stock.pojo.domain.Stock4DayDomain">
        select
            date_format(sri2.cur_time,'%Y%m%d') as date,
             sri2.trade_amount as tradeAmt,
             sri2.stock_code as code,
             sri2.min_price as lowPrice,
             sri2.stock_name as name,
             sri2.max_price as highPrice,
             sri2.open_price as openPrice,
             sri2.trade_volume as tradeVol,
             sri2.cur_price as closePrice,
             sri2.pre_close_price as preClosePrice
        from stock_rt_info as sri2
        where sri2.cur_time in (select
            max(sri.cur_time) as max_time
            from stock_rt_info as sri
            where sri.stock_code=#{stockCode}
          and sri.cur_time between  #{startDate}   and	#{endDate}
            group by date_format(sri.cur_time,'%Y%m%d'))
          and sri2.stock_code=#{stockCode}
        order by sri2.cur_time
    </select>
    <select id="getEveryDayLastTime" resultType="java.util.Date">
        select
            max(sri.cur_time) as max_time
        from stock_rt_info as sri
        where sri.stock_code=#{stockCode}
          and sri.cur_time between  #{startDate}   and	#{endDate}
        group by date_format(sri.cur_time,'%Y%m%d')
    </select>
    <select id="getStock4DayInfoByTimeList" resultType="com.s1gn.stock.pojo.domain.Stock4DayDomain">
        select
            date_format(sri2.cur_time,'%Y%m%d') as date,
             sri2.trade_amount as tradeAmt,
             sri2.stock_code as code,
             sri2.min_price as lowPrice,
             sri2.stock_name as name,
             sri2.max_price as highPrice,
             sri2.open_price as openPrice,
             sri2.trade_volume as tradeVol,
             sri2.cur_price as closePrice,
             sri2.pre_close_price as preClosePrice
        from stock_rt_info as sri2
        where sri2.cur_time in <foreach collection="timeList" item="time" separator="," open="(" close=")">#{time}</foreach>
            and sri2.stock_code=#{stockCode}
        order by sri2.cur_time


    </select>
    <select id="getStock4WeekInfo" resultType="com.s1gn.stock.pojo.domain.Stock4WeekDomain">
        SELECT
            tmp.stock_code AS stockcode,
            tmp.maxPrice,
            tmp.minPrice,
            tmp.avgPrice,
            s1.open_price AS openPrice,
            s2.cur_price AS closePrice,
            tmp.mxTime,
            weeks
        FROM(
                SELECT
                    stock_code AS stock_code,
                    MAX(cur_time) AS mxTime,
                    MIN(cur_time) AS miTime,
                    MAX(cur_price) AS maxPrice,
                    MIN(cur_price) AS minPrice,
                    AVG(cur_price) AS avgPrice,
                    DATE_FORMAT(cur_time, '%Y%u') AS weeks
                FROM
                    stock_rt_info
                WHERE
                    stock_code = #{stockCode}
                  AND cur_time BETWEEN #{startDate}
                    AND #{endDate}
                GROUP BY
                    weeks
            ) as tmp
                LEFT JOIN stock_rt_info AS s1 ON s1.stock_code = tmp.stock_code
            AND s1.cur_time = tmp.miTime
                LEFT JOIN stock_rt_info As s2 on s2.stock_code = tmp.stock_code
            And s2.cur_time = tmp.mxTime
        ORDER BY tmp.mxTime ASC
    </select>
    <select id="getStock4SecondDetailInfo" resultType="com.s1gn.stock.pojo.domain.Stock4SecondDomain">
        select
            sri.cur_time as curDate,
            sri.trade_amount as tradeAmt,
            sri.min_price as lowPrice,
            sri.max_price as highPrice,
            sri.open_price as openPrice,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.stock_code=#{stockCode}
          and sri.cur_time &lt;= #{endDate}
        Limit 1
    </select>
    <select id="getStock4SecondInfo" resultType="java.util.Map">
        select
            sri.cur_time as date,
            sri.trade_amount as tradeAmt,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.stock_code=#{stockCode}
          and sri.cur_time &lt;= #{endDate}
        order by sri.cur_time desc
            Limit 10
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.s1gn.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values (#{id,jdbcType=BIGINT},#{stockCode,jdbcType=CHAR},#{stockName,jdbcType=VARCHAR}
        ,#{preClosePrice,jdbcType=DECIMAL},#{openPrice,jdbcType=DECIMAL},#{curPrice,jdbcType=DECIMAL}
        ,#{minPrice,jdbcType=DECIMAL},#{maxPrice,jdbcType=DECIMAL},#{tradeAmount,jdbcType=BIGINT}
        ,#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.s1gn.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="stockCode != null">stock_code,</if>
                <if test="stockName != null">stock_name,</if>
                <if test="preClosePrice != null">pre_close_price,</if>
                <if test="openPrice != null">open_price,</if>
                <if test="curPrice != null">cur_price,</if>
                <if test="minPrice != null">min_price,</if>
                <if test="maxPrice != null">max_price,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="stockCode != null">#{stockCode,jdbcType=CHAR},</if>
                <if test="stockName != null">#{stockName,jdbcType=VARCHAR},</if>
                <if test="preClosePrice != null">#{preClosePrice,jdbcType=DECIMAL},</if>
                <if test="openPrice != null">#{openPrice,jdbcType=DECIMAL},</if>
                <if test="curPrice != null">#{curPrice,jdbcType=DECIMAL},</if>
                <if test="minPrice != null">#{minPrice,jdbcType=DECIMAL},</if>
                <if test="maxPrice != null">#{maxPrice,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="insertBatch">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values
            <foreach collection="infoList" item="info" separator=",">
                (#{info.id,jdbcType=BIGINT},#{info.stockCode,jdbcType=CHAR},#{info.stockName,jdbcType=VARCHAR}
                ,#{info.preClosePrice,jdbcType=DECIMAL},#{info.openPrice,jdbcType=DECIMAL},#{info.curPrice,jdbcType=DECIMAL}
                ,#{info.minPrice,jdbcType=DECIMAL},#{info.maxPrice,jdbcType=DECIMAL},#{info.tradeAmount,jdbcType=BIGINT}
                ,#{info.tradeVolume,jdbcType=DECIMAL},#{info.curTime,jdbcType=TIMESTAMP})
            </foreach>

    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.s1gn.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
                <if test="stockCode != null">
                    stock_code = #{stockCode,jdbcType=CHAR},
                </if>
                <if test="stockName != null">
                    stock_name = #{stockName,jdbcType=VARCHAR},
                </if>
                <if test="preClosePrice != null">
                    pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
                </if>
                <if test="openPrice != null">
                    open_price = #{openPrice,jdbcType=DECIMAL},
                </if>
                <if test="curPrice != null">
                    cur_price = #{curPrice,jdbcType=DECIMAL},
                </if>
                <if test="minPrice != null">
                    min_price = #{minPrice,jdbcType=DECIMAL},
                </if>
                <if test="maxPrice != null">
                    max_price = #{maxPrice,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.s1gn.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set 
            stock_code =  #{stockCode,jdbcType=CHAR},
            stock_name =  #{stockName,jdbcType=VARCHAR},
            pre_close_price =  #{preClosePrice,jdbcType=DECIMAL},
            open_price =  #{openPrice,jdbcType=DECIMAL},
            cur_price =  #{curPrice,jdbcType=DECIMAL},
            min_price =  #{minPrice,jdbcType=DECIMAL},
            max_price =  #{maxPrice,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
